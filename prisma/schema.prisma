datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model users {
  id            String   @id @default(uuid())
  role          String   @default("customer")
  email         String   @unique
  password_hash String
  coupons       coupons[]
  redemptions   redemptions[]
  created_at    DateTime @default(now())
}

model shops {
  id        String   @id @default(uuid())
  name      String
  owner_id  String   @unique
  coupons   coupons[]
  redemptions redemptions[]
  created_at DateTime @default(now())
}

model coupons {
  id         String   @id @default(uuid())
  user_id    String
  shop_id    String
  status     String   @default("pending")
  threshold  Int      @default(3)
  expires_at DateTime
  created_at DateTime @default(now())
  share_links share_links[]
  redemptions redemptions[]
  users      users    @relation(fields: [user_id], references: [id])
  shops      shops    @relation(fields: [shop_id], references: [id])
}

model share_links {
  id        String   @id @default(uuid())
  coupon_id String
  link_url  String   @unique
  generated_at DateTime @default(now())
  clicks    clicks[]
  coupons   coupons  @relation(fields: [coupon_id], references: [id])
}

model clicks {
  id            String   @id @default(uuid())
  share_link_id String
  clicker_ip    String
  redeemed      Boolean  @default(false)
  clicked_at    DateTime @default(now())
  share_links   share_links @relation(fields: [share_link_id], references: [id])
}

model redemptions {
  id            String   @id @default(uuid())
  coupon_id     String
  redeemer_id   String
  confirmed_at  DateTime
  shopkeeper_id String
  coupons       coupons  @relation(fields: [coupon_id], references: [id])
  users         users    @relation(fields: [redeemer_id], references: [id])
  shops         shops    @relation(fields: [shopkeeper_id], references: [id])
}
